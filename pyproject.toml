[project]
name = "finm32500-assignment-5"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Antonio Braz", email = "antonio@torreaobraz.com" }
]
requires-python = ">=3.13"
dependencies = [
    "coverage>=7.11.0",
    "numpy>=2.3.4",
    "pandas>=2.3.3",
]

[project.scripts]
finm32500-assignment-5 = "backtester:main"

[build-system]
requires = ["uv_build>=0.9.0,<0.10.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "backtester"
module-root = "src"

[dependency-groups]
dev = [
    "pandas-stubs>=2.3.2.250926",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src/backtester",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src/backtester"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 90.0
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
